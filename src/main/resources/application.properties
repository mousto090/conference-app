#jpa
#when the app is deployed inside the container the hostname is not loclahost but the postgres service
#name defined in docker-compose.yml
#spring.datasource.url=jdbc:postgresql://{postgres_service_name_in_docker_compose.yml}:5432/conference
#spring.datasource.url=jdbc:postgresql://postgres:5432/conference
#spring.datasource.url=jdbc:postgresql://localhost:5432/conference
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#connect using supplied env variable or default url
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/conference?user=postgres&password=postgres}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.platform=postgresql
spring.jpa.hibernate.ddl-auto=none
#=====To create DDL from schema-postgresql.sql and init DB with data-postgresql.sql======
#put these two to 'never' after first time to avoid errors
spring.batch.initialize-schema=${INIT_DB:never}
spring.datasource.initialization-mode=${INIT_DB:never}
spring.jpa.generate-ddl=false

#=====Logging=========
logging.level.org.hibernate.SQL=DEBUG
spring.jpa.show-sql=true
#logging.level.org.springframework=debug

#===Handle Lob type (large object for binary images i.e)
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#application
appication.version=@project.version@
